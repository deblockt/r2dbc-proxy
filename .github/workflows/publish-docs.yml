# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Publish documentation to the project page

on:
  push:
    branches: [ main, release-0.x ]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Get project version
        run: |
            VERSION=$( ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout )
            echo "project_version=$VERSION" >> $GITHUB_ENV

      - name: Process asciidoc and javadoc
        run: ./mvnw -q asciidoctor:process-asciidoc javadoc:javadoc

        #
        # construct a directory to be copied to "gh-pages" branch
        #    target/deploy-documents/             -- root dir in "gh-pages"
        #                 `-- <PROJECT_VERSION>   -- e.g. "0.9.0.BUILD-SNAPSHOT"
        #                       `-- reference
        #                       `-- javadoc-api
        #                 `-- current-snapshot    -- for latest snapshot
        #                       `-- reference
        #                       `-- javadoc-api
        #                 `-- current             -- for latest release version
        #                       `-- reference
        #                       `-- javadoc-api

      - name: Prepare "project-version" documents
        run: |
          mkdir -p target/deploy-documents/${{ env.project_version }}/reference
          mkdir -p target/deploy-documents/${{ env.project_version }}/javadoc-api
          cp -Rf target/generated-docs/* target/deploy-documents/${{ env.project_version }}/reference/
          cp -Rf target/site/apidocs/* target/deploy-documents/${{ env.project_version }}/javadoc-api/

      - name: Prepare "current-snapshot" documents
        if: "github.branch == 'main' && contains(env.project_version, 'snapshot')"
        run: |
          mkdir -p target/deploy-documents/current-snapshot/reference
          mkdir -p target/deploy-documents/current-snapshot/javadoc-api
          cp -Rf target/generated-docs/* target/deploy-documents/current-snapshot/reference/
          cp -Rf target/site/apidocs/* target/deploy-documents/current-snapshot/javadoc-api/

      - name: Prepare "current" documents
        if: "!contains(env.project_version, 'snapshot')"
        run: |
          mkdir -p target/deploy-documents/current/reference
          mkdir -p target/deploy-documents/current/javadoc-api
          cp -Rf target/generated-docs/* target/deploy-documents/current/reference/
          cp -Rf target/site/apidocs/* target/deploy-documents/current/javadoc-api/

      - name: Deploy documents
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: target/deploy-documents
          destination_dir: docs
          keep_files: true
          full_commit_message: "Deploying documents(${{ env.project_version}}) to ${{ github.ref }} from ${{ github.repository }}@${{ github.sha }}"
